#include <iostream>
#include <limits.h>
#include <vector>
#include <queue>

using namespace std;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0), cout.tie(0);

	int n, m, ans = INT_MAX, idx = 0;
	cin >> n >> m;

	vector<int> pos(n, 0);
	vector<int> dist(n, 0);
	vector<int> visited(n, 0);
  
	for (int i = 0; i < n; i++) {
		cin >> pos[i];  // 인력거 위치
	}

	for (int i = 0; i < n; i++) {
		cin >> dist[i];   // 인력거 최대 이동 거리
	}

	queue<pair<int, int>> q;
	q.push({ 0, 0 });
	
	while (!q.empty()) {
		int p = q.front().first;  // 인력거 인덱스
		int cnt = q.front().second;  // 현재 인력거 환승 횟수

		if (pos[p] + dist[p] >= m) ans = min(ans, cnt);

		int temp = idx + 1;  // 확인한 인력거들 중 가장 먼 위치에 있는 인력거의 위치 + 1
		for (int i = temp; i < n; i++) {
			if (visited[i] == 1) continue;  // 확인한 인력거 패스
			if (pos[p] + dist[p] >= pos[i]) {  // p에서 탄 인력거로 i 위치까지 갈 수 있을 때
				visited[i] = 1;
				q.push({ i, cnt + 1 });  // 인력거 환승
				idx = max(i, idx);  // 확인한 인력거들 중 가장 먼 위치에 있는 인력거의 위치
			}
			else break;
		}
		q.pop();
	}

	if (ans == INT_MAX) cout << -1;
	else cout << ans;
}
